; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.21022.08 

	TITLE	d:\-=SVN=-\svplayer\src\subtitles\SSF.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	?Reload@CRenderer@ssf@@UAGJXZ			; ssf::CRenderer::Reload
PUBLIC	?SetStream@CRenderer@ssf@@UAGJH@Z		; ssf::CRenderer::SetStream
PUBLIC	?GetStream@CRenderer@ssf@@UAGHXZ		; ssf::CRenderer::GetStream
PUBLIC	?GetStreamInfo@CRenderer@ssf@@UAGJHPAPA_WPAK@Z	; ssf::CRenderer::GetStreamInfo
PUBLIC	?GetStreamCount@CRenderer@ssf@@UAGHXZ		; ssf::CRenderer::GetStreamCount
PUBLIC	?GetClassID@CRenderer@ssf@@UAGJPAU_GUID@@@Z	; ssf::CRenderer::GetClassID
PUBLIC	??_R4CRenderer@ssf@@6B@				; ssf::CRenderer::`RTTI Complete Object Locator'
PUBLIC	?Render@CRenderer@ssf@@UAGJAAUSubPicDesc@@_JNAAUtagRECT@@@Z ; ssf::CRenderer::Render
PUBLIC	?IsAnimated@CRenderer@ssf@@UAG_NPAU__POSITION@@@Z ; ssf::CRenderer::IsAnimated
PUBLIC	?GetStop@CRenderer@ssf@@UAG_JPAU__POSITION@@N@Z	; ssf::CRenderer::GetStop
PUBLIC	?GetStart@CRenderer@ssf@@UAG_JPAU__POSITION@@N@Z ; ssf::CRenderer::GetStart
PUBLIC	?GetNext@CRenderer@ssf@@UAGPAU__POSITION@@PAU3@@Z ; ssf::CRenderer::GetNext
PUBLIC	?GetStartPosition@CRenderer@ssf@@UAGPAU__POSITION@@_JN@Z ; ssf::CRenderer::GetStartPosition
PUBLIC	??_R4CRenderer@ssf@@6BISubPicProvider@@@	; ssf::CRenderer::`RTTI Complete Object Locator'
PUBLIC	?NonDelegatingQueryInterface@CRenderer@ssf@@UAGJABU_GUID@@PAPAX@Z ; ssf::CRenderer::NonDelegatingQueryInterface
PUBLIC	??_R4CRenderer@ssf@@6BCUnknown@@@		; ssf::CRenderer::`RTTI Complete Object Locator'
PUBLIC	??_R3CRenderer@ssf@@8				; ssf::CRenderer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRenderer@ssf@@8				; ssf::CRenderer::`RTTI Base Class Array'
PUBLIC	??_R1BE@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (20,-1,0,66)'
PUBLIC	??_R1BE@?0A@EA@IPersist@@8			; IPersist::`RTTI Base Class Descriptor at (20,-1,0,64)'
PUBLIC	??_R1BE@?0A@EA@ISubStream@@8			; ISubStream::`RTTI Base Class Descriptor at (20,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CRenderer@ssf@@8			; ssf::CRenderer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCRenderer@ssf@@@8			; ssf::CRenderer `RTTI Type Descriptor'
PUBLIC	??0?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QAE@XZ	; ATL::CAutoPtr<ssf::SubtitleFile>::CAutoPtr<ssf::SubtitleFile>
PUBLIC	??0?$CAutoPtr@VRenderer@ssf@@@ATL@@QAE@XZ	; ATL::CAutoPtr<ssf::Renderer>::CAutoPtr<ssf::Renderer>
PUBLIC	??1?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QAE@XZ	; ATL::CAutoPtr<ssf::SubtitleFile>::~CAutoPtr<ssf::SubtitleFile>
PUBLIC	??1?$CAutoPtr@VRenderer@ssf@@@ATL@@QAE@XZ	; ATL::CAutoPtr<ssf::Renderer>::~CAutoPtr<ssf::Renderer>
PUBLIC	??_GCRenderer@ssf@@UAEPAXI@Z			; ssf::CRenderer::`scalar deleting destructor'
PUBLIC	?QueryInterface@CRenderer@ssf@@UAGJABU_GUID@@PAPAX@Z ; ssf::CRenderer::QueryInterface
PUBLIC	?QueryInterface@CRenderer@ssf@@W7AGJABU_GUID@@PAPAX@Z ; [thunk]:ssf::CRenderer::QueryInterface`adjustor{8}'
PUBLIC	?AddRef@CRenderer@ssf@@UAGKXZ			; ssf::CRenderer::AddRef
PUBLIC	?AddRef@CRenderer@ssf@@W7AGKXZ			; [thunk]:ssf::CRenderer::AddRef`adjustor{8}'
PUBLIC	?Release@CRenderer@ssf@@UAGKXZ			; ssf::CRenderer::Release
PUBLIC	?Release@CRenderer@ssf@@W7AGKXZ			; [thunk]:ssf::CRenderer::Release`adjustor{8}'
PUBLIC	?Attach@?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QAEXPAVSubtitleFile@ssf@@@Z ; ATL::CAutoPtr<ssf::SubtitleFile>::Attach
PUBLIC	?Free@?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QAEXXZ ; ATL::CAutoPtr<ssf::SubtitleFile>::Free
PUBLIC	?Attach@?$CAutoPtr@VRenderer@ssf@@@ATL@@QAEXPAVRenderer@ssf@@@Z ; ATL::CAutoPtr<ssf::Renderer>::Attach
PUBLIC	?Free@?$CAutoPtr@VRenderer@ssf@@@ATL@@QAEXXZ	; ATL::CAutoPtr<ssf::Renderer>::Free
PUBLIC	??1WCharInputStream@ssf@@UAE@XZ			; ssf::WCharInputStream::~WCharInputStream
PUBLIC	??B?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QBEPAVSubtitleFile@ssf@@XZ ; ATL::CAutoPtr<ssf::SubtitleFile>::operator ssf::SubtitleFile *
PUBLIC	??C?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QBEPAVSubtitleFile@ssf@@XZ ; ATL::CAutoPtr<ssf::SubtitleFile>::operator->
PUBLIC	??B?$CAutoPtr@VRenderer@ssf@@@ATL@@QBEPAVRenderer@ssf@@XZ ; ATL::CAutoPtr<ssf::Renderer>::operator ssf::Renderer *
PUBLIC	??C?$CAutoPtr@VRenderer@ssf@@@ATL@@QBEPAVRenderer@ssf@@XZ ; ATL::CAutoPtr<ssf::Renderer>::operator->
PUBLIC	?GetHeadPosition@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::GetHeadPosition
PUBLIC	?GetNext@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VSubtitle@ssf@@@2@AAPAU__POSITION@@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::GetNext
PUBLIC	??0?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAE@I@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >
PUBLIC	??0?$CAutoPtrList@VSubtitle@ssf@@@ATL@@QAE@I@Z	; ATL::CAutoPtrList<ssf::Subtitle>::CAutoPtrList<ssf::Subtitle>
PUBLIC	?Free@?$CAutoPtr@VSubtitle@ssf@@@ATL@@QAEXXZ	; ATL::CAutoPtr<ssf::Subtitle>::Free
PUBLIC	??1?$CAutoPtr@VSubtitle@ssf@@@ATL@@QAE@XZ	; ATL::CAutoPtr<ssf::Subtitle>::~CAutoPtr<ssf::Subtitle>
PUBLIC	??1CNode@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::CNode::~CNode
PUBLIC	??_GCNode@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAEPAXI@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::CNode::`scalar deleting destructor'
PUBLIC	?FreeNode@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::FreeNode
PUBLIC	?RemoveAll@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::RemoveAll
PUBLIC	??1?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::~CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >
PUBLIC	??1?$CAutoPtrList@VSubtitle@ssf@@@ATL@@QAE@XZ	; ATL::CAutoPtrList<ssf::Subtitle>::~CAutoPtrList<ssf::Subtitle>
PUBLIC	??B?$CAutoPtr@VSubtitle@ssf@@@ATL@@QBEPAVSubtitle@ssf@@XZ ; ATL::CAutoPtr<ssf::Subtitle>::operator ssf::Subtitle *
PUBLIC	??_R0?AVException@ssf@@@8			; ssf::Exception `RTTI Type Descriptor'
PUBLIC	??_7CRenderer@ssf@@6BCUnknown@@@		; ssf::CRenderer::`vftable'
PUBLIC	??_7CRenderer@ssf@@6BISubPicProvider@@@		; ssf::CRenderer::`vftable'
PUBLIC	??_7CRenderer@ssf@@6B@				; ssf::CRenderer::`vftable'
PUBLIC	__GUID_e0593632_0ab7_47ca_8be1_e9d2a6a4825e
EXTRN	??_ECRenderer@ssf@@UAEPAXI@Z:PROC		; ssf::CRenderer::`vector deleting destructor'
EXTRN	??0FileInputStream@ssf@@QAE@PB_W@Z:PROC		; ssf::FileInputStream::FileInputStream
EXTRN	??1FileInputStream@ssf@@UAE@XZ:PROC		; ssf::FileInputStream::~FileInputStream
EXTRN	??0SubtitleFile@ssf@@QAE@XZ:PROC		; ssf::SubtitleFile::SubtitleFile
EXTRN	?Parse@SubtitleFile@ssf@@QAEXAAVInputStream@2@@Z:PROC ; ssf::SubtitleFile::Parse
EXTRN	??0Renderer@ssf@@QAE@XZ:PROC			; ssf::Renderer::Renderer
EXTRN	??0WCharInputStream@ssf@@QAE@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z:PROC ; ssf::WCharInputStream::WCharInputStream
EXTRN	??1InputStream@ssf@@UAE@XZ:PROC			; ssf::InputStream::~InputStream
EXTRN	?Append@SubtitleFile@ssf@@QAEXAAVInputStream@2@MM_N@Z:PROC ; ssf::SubtitleFile::Append
EXTRN	?Lookup@SegmentList@SubtitleFile@ssf@@QAE_NMAAI@Z:PROC ; ssf::SubtitleFile::SegmentList::Lookup
EXTRN	?GetSegment@SegmentList@SubtitleFile@ssf@@QAEPBVSegment@23@I@Z:PROC ; ssf::SubtitleFile::SegmentList::GetSegment
EXTRN	?Lookup@SubtitleFile@ssf@@QAE_NMAAV?$CAutoPtrList@VSubtitle@ssf@@@ATL@@@Z:PROC ; ssf::SubtitleFile::Lookup
EXTRN	?Draw@RenderedSubtitle@ssf@@QBE?AVCRect@@AAUSubPicDesc@@@Z:PROC ; ssf::RenderedSubtitle::Draw
EXTRN	?NextSegment@Renderer@ssf@@QAEXABV?$CAutoPtrList@VSubtitle@ssf@@@ATL@@@Z:PROC ; ssf::Renderer::NextSegment
EXTRN	?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z:PROC ; ssf::Renderer::Lookup
;	COMDAT __GUID_e0593632_0ab7_47ca_8be1_e9d2a6a4825e
CONST	SEGMENT
__GUID_e0593632_0ab7_47ca_8be1_e9d2a6a4825e DD 0e0593632H
	DW	0ab7H
	DW	047caH
	DB	08bH
	DB	0e1H
	DB	0e9H
	DB	0d2H
	DB	0a6H
	DB	0a4H
	DB	082H
	DB	05eH
CONST	ENDS
;	COMDAT ??_7CRenderer@ssf@@6B@
CONST	SEGMENT
??_7CRenderer@ssf@@6B@ DD FLAT:??_R4CRenderer@ssf@@6B@	; ssf::CRenderer::`vftable'
	DD	FLAT:?QueryInterface@CRenderer@ssf@@W7AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CRenderer@ssf@@W7AGKXZ
	DD	FLAT:?Release@CRenderer@ssf@@W7AGKXZ
	DD	FLAT:?GetClassID@CRenderer@ssf@@UAGJPAU_GUID@@@Z
	DD	FLAT:?GetStreamCount@CRenderer@ssf@@UAGHXZ
	DD	FLAT:?GetStreamInfo@CRenderer@ssf@@UAGJHPAPA_WPAK@Z
	DD	FLAT:?GetStream@CRenderer@ssf@@UAGHXZ
	DD	FLAT:?SetStream@CRenderer@ssf@@UAGJH@Z
	DD	FLAT:?Reload@CRenderer@ssf@@UAGJXZ
CONST	ENDS
;	COMDAT ??_R4CRenderer@ssf@@6B@
rdata$r	SEGMENT
??_R4CRenderer@ssf@@6B@ DD 00H				; ssf::CRenderer::`RTTI Complete Object Locator'
	DD	014H
	DD	00H
	DD	FLAT:??_R0?AVCRenderer@ssf@@@8
	DD	FLAT:??_R3CRenderer@ssf@@8
rdata$r	ENDS
;	COMDAT ??_7CRenderer@ssf@@6BISubPicProvider@@@
CONST	SEGMENT
??_7CRenderer@ssf@@6BISubPicProvider@@@ DD FLAT:??_R4CRenderer@ssf@@6BISubPicProvider@@@ ; ssf::CRenderer::`vftable'
	DD	FLAT:?QueryInterface@CRenderer@ssf@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CRenderer@ssf@@UAGKXZ
	DD	FLAT:?Release@CRenderer@ssf@@UAGKXZ
	DD	FLAT:?Lock@ISubPicProviderImpl@@UAGJXZ
	DD	FLAT:?Unlock@ISubPicProviderImpl@@UAGJXZ
	DD	FLAT:?GetStartPosition@CRenderer@ssf@@UAGPAU__POSITION@@_JN@Z
	DD	FLAT:?GetNext@CRenderer@ssf@@UAGPAU__POSITION@@PAU3@@Z
	DD	FLAT:?GetStart@CRenderer@ssf@@UAG_JPAU__POSITION@@N@Z
	DD	FLAT:?GetStop@CRenderer@ssf@@UAG_JPAU__POSITION@@N@Z
	DD	FLAT:?IsAnimated@CRenderer@ssf@@UAG_NPAU__POSITION@@@Z
	DD	FLAT:?Render@CRenderer@ssf@@UAGJAAUSubPicDesc@@_JNAAUtagRECT@@@Z
CONST	ENDS
;	COMDAT ??_R4CRenderer@ssf@@6BISubPicProvider@@@
rdata$r	SEGMENT
??_R4CRenderer@ssf@@6BISubPicProvider@@@ DD 00H		; ssf::CRenderer::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCRenderer@ssf@@@8
	DD	FLAT:??_R3CRenderer@ssf@@8
rdata$r	ENDS
;	COMDAT ??_7CRenderer@ssf@@6BCUnknown@@@
CONST	SEGMENT
??_7CRenderer@ssf@@6BCUnknown@@@ DD FLAT:??_R4CRenderer@ssf@@6BCUnknown@@@ ; ssf::CRenderer::`vftable'
	DD	FLAT:?NonDelegatingQueryInterface@CRenderer@ssf@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?NonDelegatingAddRef@CUnknown@@UAGKXZ
	DD	FLAT:?NonDelegatingRelease@CUnknown@@UAGKXZ
	DD	FLAT:??_ECRenderer@ssf@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4CRenderer@ssf@@6BCUnknown@@@
rdata$r	SEGMENT
??_R4CRenderer@ssf@@6BCUnknown@@@ DD 00H		; ssf::CRenderer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRenderer@ssf@@@8
	DD	FLAT:??_R3CRenderer@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R3CRenderer@ssf@@8
rdata$r	SEGMENT
??_R3CRenderer@ssf@@8 DD 00H				; ssf::CRenderer::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	0aH
	DD	FLAT:??_R2CRenderer@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R2CRenderer@ssf@@8
rdata$r	SEGMENT
??_R2CRenderer@ssf@@8 DD FLAT:??_R1A@?0A@EA@CRenderer@ssf@@8 ; ssf::CRenderer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ISubPicProviderImpl@@8
	DD	FLAT:??_R1A@?0A@EA@CUnknown@@8
	DD	FLAT:??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	FLAT:??_R13?0A@EA@CBaseObject@@8
	DD	FLAT:??_R1M@?0A@EA@ISubPicProvider@@8
	DD	FLAT:??_R1M@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BE@?0A@EA@ISubStream@@8
	DD	FLAT:??_R1BE@?0A@EA@IPersist@@8
	DD	FLAT:??_R1BE@?0A@EC@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1BE@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1BE@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (20,-1,0,66)'
	DD	00H
	DD	014H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1BE@?0A@EA@IPersist@@8
rdata$r	SEGMENT
??_R1BE@?0A@EA@IPersist@@8 DD FLAT:??_R0?AUIPersist@@@8	; IPersist::`RTTI Base Class Descriptor at (20,-1,0,64)'
	DD	01H
	DD	014H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IPersist@@8
rdata$r	ENDS
;	COMDAT ??_R1BE@?0A@EA@ISubStream@@8
rdata$r	SEGMENT
??_R1BE@?0A@EA@ISubStream@@8 DD FLAT:??_R0?AUISubStream@@@8 ; ISubStream::`RTTI Base Class Descriptor at (20,-1,0,64)'
	DD	02H
	DD	014H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISubStream@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRenderer@ssf@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRenderer@ssf@@8 DD FLAT:??_R0?AVCRenderer@ssf@@@8 ; ssf::CRenderer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRenderer@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRenderer@ssf@@@8
_DATA	SEGMENT
??_R0?AVCRenderer@ssf@@@8 DD FLAT:??_7type_info@@6B@	; ssf::CRenderer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRenderer@ssf@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVException@ssf@@@8
_DATA	SEGMENT
??_R0?AVException@ssf@@@8 DD FLAT:??_7type_info@@6B@	; ssf::Exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVException@ssf@@', 00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlbase.h
;	COMDAT ?Free@?$CAutoPtr@VSubtitle@ssf@@@ATL@@QAEXXZ
_TEXT	SEGMENT
?Free@?$CAutoPtr@VSubtitle@ssf@@@ATL@@QAEXXZ PROC	; ATL::CAutoPtr<ssf::Subtitle>::Free, COMDAT
; _this$ = ecx

; 818  : 	{

	push	esi
	mov	esi, ecx

; 819  : 		delete m_p;

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN5@Free
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN5@Free:

; 820  : 		m_p = NULL;

	mov	DWORD PTR [esi], 0
	pop	esi

; 821  : 	}

	ret	0
?Free@?$CAutoPtr@VSubtitle@ssf@@@ATL@@QAEXXZ ENDP	; ATL::CAutoPtr<ssf::Subtitle>::Free
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$CAutoPtr@VSubtitle@ssf@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CAutoPtr@VSubtitle@ssf@@@ATL@@QAE@XZ PROC		; ATL::CAutoPtr<ssf::Subtitle>::~CAutoPtr<ssf::Subtitle>, COMDAT
; _this$ = ecx

; 725  : 	{

	push	esi
	mov	esi, ecx

; 726  : 		Free();

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN7@CAutoPtr
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN7@CAutoPtr:
	mov	DWORD PTR [esi], 0
	pop	esi

; 727  : 	}

	ret	0
??1?$CAutoPtr@VSubtitle@ssf@@@ATL@@QAE@XZ ENDP		; ATL::CAutoPtr<ssf::Subtitle>::~CAutoPtr<ssf::Subtitle>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlcoll.h
_TEXT	ENDS
;	COMDAT ??1CNode@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CNode@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAE@XZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::CNode::~CNode, COMDAT
; _this$ = esi

; 1109 : 		}

	mov	ecx, DWORD PTR [esi+8]
	test	ecx, ecx
	je	SHORT $LN9@CNode
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN9@CNode:
	mov	DWORD PTR [esi+8], 0
	ret	0
??1CNode@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAE@XZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::CNode::~CNode
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GCNode@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAEPAXI@Z
_TEXT	SEGMENT
??_GCNode@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAEPAXI@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::CNode::`scalar deleting destructor', COMDAT
; _this$ = esi
	mov	ecx, DWORD PTR [esi+8]
	test	ecx, ecx
	je	SHORT $LN12@scalar
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN12@scalar:
	mov	eax, esi
	mov	DWORD PTR [esi+8], 0
	ret	0
??_GCNode@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAEPAXI@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::CNode::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetHeadPosition@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
?GetHeadPosition@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::GetHeadPosition, COMDAT
; _this$ = ecx

; 1286 : 	return( POSITION( m_pHead ) );

	mov	eax, DWORD PTR [ecx]

; 1287 : }

	ret	0
?GetHeadPosition@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::GetHeadPosition
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAE@I@Z
_TEXT	SEGMENT
??0?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAE@I@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >, COMDAT
; _this$ = eax

; 1375 : {

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], 10			; 0000000aH

; 1376 : 	ATLASSERT( nBlockSize > 0 );
; 1377 : }

	ret	0
??0?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAE@I@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlbase.h
_TEXT	ENDS
;	COMDAT ??B?$CAutoPtr@VSubtitle@ssf@@@ATL@@QBEPAVSubtitle@ssf@@XZ
_TEXT	SEGMENT
??B?$CAutoPtr@VSubtitle@ssf@@@ATL@@QBEPAVSubtitle@ssf@@XZ PROC ; ATL::CAutoPtr<ssf::Subtitle>::operator ssf::Subtitle *, COMDAT
; _this$ = ecx

; 792  : 		return( m_p );

	mov	eax, DWORD PTR [ecx]

; 793  : 	}

	ret	0
??B?$CAutoPtr@VSubtitle@ssf@@@ATL@@QBEPAVSubtitle@ssf@@XZ ENDP ; ATL::CAutoPtr<ssf::Subtitle>::operator ssf::Subtitle *
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Free@?$CAutoPtr@VRenderer@ssf@@@ATL@@QAEXXZ
_TEXT	SEGMENT
?Free@?$CAutoPtr@VRenderer@ssf@@@ATL@@QAEXXZ PROC	; ATL::CAutoPtr<ssf::Renderer>::Free, COMDAT
; _this$ = esi

; 819  : 		delete m_p;

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN5@Free@2
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN5@Free@2:

; 820  : 		m_p = NULL;

	mov	DWORD PTR [esi], 0

; 821  : 	}

	ret	0
?Free@?$CAutoPtr@VRenderer@ssf@@@ATL@@QAEXXZ ENDP	; ATL::CAutoPtr<ssf::Renderer>::Free
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Attach@?$CAutoPtr@VRenderer@ssf@@@ATL@@QAEXPAVRenderer@ssf@@@Z
_TEXT	SEGMENT
?Attach@?$CAutoPtr@VRenderer@ssf@@@ATL@@QAEXPAVRenderer@ssf@@@Z PROC ; ATL::CAutoPtr<ssf::Renderer>::Attach, COMDAT
; _this$ = eax
; _p$ = ecx

; 803  : 		ATLASSUME( m_p == NULL );
; 804  : 		m_p = p;

	mov	DWORD PTR [eax], ecx

; 805  : 	}

	ret	0
?Attach@?$CAutoPtr@VRenderer@ssf@@@ATL@@QAEXPAVRenderer@ssf@@@Z ENDP ; ATL::CAutoPtr<ssf::Renderer>::Attach
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??C?$CAutoPtr@VRenderer@ssf@@@ATL@@QBEPAVRenderer@ssf@@XZ
_TEXT	SEGMENT
??C?$CAutoPtr@VRenderer@ssf@@@ATL@@QBEPAVRenderer@ssf@@XZ PROC ; ATL::CAutoPtr<ssf::Renderer>::operator->, COMDAT
; _this$ = eax

; 796  : 		ATLASSUME( m_p != NULL );
; 797  : 		return( m_p );

	mov	eax, DWORD PTR [eax]

; 798  : 	}

	ret	0
??C?$CAutoPtr@VRenderer@ssf@@@ATL@@QBEPAVRenderer@ssf@@XZ ENDP ; ATL::CAutoPtr<ssf::Renderer>::operator->
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??B?$CAutoPtr@VRenderer@ssf@@@ATL@@QBEPAVRenderer@ssf@@XZ
_TEXT	SEGMENT
??B?$CAutoPtr@VRenderer@ssf@@@ATL@@QBEPAVRenderer@ssf@@XZ PROC ; ATL::CAutoPtr<ssf::Renderer>::operator ssf::Renderer *, COMDAT
; _this$ = eax

; 792  : 		return( m_p );

	mov	eax, DWORD PTR [eax]

; 793  : 	}

	ret	0
??B?$CAutoPtr@VRenderer@ssf@@@ATL@@QBEPAVRenderer@ssf@@XZ ENDP ; ATL::CAutoPtr<ssf::Renderer>::operator ssf::Renderer *
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$CAutoPtr@VRenderer@ssf@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CAutoPtr@VRenderer@ssf@@@ATL@@QAE@XZ PROC		; ATL::CAutoPtr<ssf::Renderer>::~CAutoPtr<ssf::Renderer>, COMDAT
; _this$ = esi

; 726  : 		Free();

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN7@CAutoPtr@2
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN7@CAutoPtr@2:
	mov	DWORD PTR [esi], 0

; 727  : 	}

	ret	0
??1?$CAutoPtr@VRenderer@ssf@@@ATL@@QAE@XZ ENDP		; ATL::CAutoPtr<ssf::Renderer>::~CAutoPtr<ssf::Renderer>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$CAutoPtr@VRenderer@ssf@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??0?$CAutoPtr@VRenderer@ssf@@@ATL@@QAE@XZ PROC		; ATL::CAutoPtr<ssf::Renderer>::CAutoPtr<ssf::Renderer>, COMDAT
; _this$ = eax

; 709  : 	{

	mov	DWORD PTR [eax], 0

; 710  : 	}

	ret	0
??0?$CAutoPtr@VRenderer@ssf@@@ATL@@QAE@XZ ENDP		; ATL::CAutoPtr<ssf::Renderer>::CAutoPtr<ssf::Renderer>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Free@?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QAEXXZ
_TEXT	SEGMENT
?Free@?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QAEXXZ PROC	; ATL::CAutoPtr<ssf::SubtitleFile>::Free, COMDAT
; _this$ = esi

; 819  : 		delete m_p;

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN5@Free@3
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN5@Free@3:

; 820  : 		m_p = NULL;

	mov	DWORD PTR [esi], 0

; 821  : 	}

	ret	0
?Free@?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QAEXXZ ENDP	; ATL::CAutoPtr<ssf::SubtitleFile>::Free
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Attach@?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QAEXPAVSubtitleFile@ssf@@@Z
_TEXT	SEGMENT
?Attach@?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QAEXPAVSubtitleFile@ssf@@@Z PROC ; ATL::CAutoPtr<ssf::SubtitleFile>::Attach, COMDAT
; _this$ = eax
; _p$ = ecx

; 803  : 		ATLASSUME( m_p == NULL );
; 804  : 		m_p = p;

	mov	DWORD PTR [eax], ecx

; 805  : 	}

	ret	0
?Attach@?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QAEXPAVSubtitleFile@ssf@@@Z ENDP ; ATL::CAutoPtr<ssf::SubtitleFile>::Attach
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??C?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QBEPAVSubtitleFile@ssf@@XZ
_TEXT	SEGMENT
??C?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QBEPAVSubtitleFile@ssf@@XZ PROC ; ATL::CAutoPtr<ssf::SubtitleFile>::operator->, COMDAT
; _this$ = eax

; 796  : 		ATLASSUME( m_p != NULL );
; 797  : 		return( m_p );

	mov	eax, DWORD PTR [eax]

; 798  : 	}

	ret	0
??C?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QBEPAVSubtitleFile@ssf@@XZ ENDP ; ATL::CAutoPtr<ssf::SubtitleFile>::operator->
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??B?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QBEPAVSubtitleFile@ssf@@XZ
_TEXT	SEGMENT
??B?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QBEPAVSubtitleFile@ssf@@XZ PROC ; ATL::CAutoPtr<ssf::SubtitleFile>::operator ssf::SubtitleFile *, COMDAT
; _this$ = eax

; 792  : 		return( m_p );

	mov	eax, DWORD PTR [eax]

; 793  : 	}

	ret	0
??B?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QBEPAVSubtitleFile@ssf@@XZ ENDP ; ATL::CAutoPtr<ssf::SubtitleFile>::operator ssf::SubtitleFile *
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QAE@XZ PROC	; ATL::CAutoPtr<ssf::SubtitleFile>::~CAutoPtr<ssf::SubtitleFile>, COMDAT
; _this$ = esi

; 726  : 		Free();

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN7@CAutoPtr@3
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN7@CAutoPtr@3:
	mov	DWORD PTR [esi], 0

; 727  : 	}

	ret	0
??1?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QAE@XZ ENDP	; ATL::CAutoPtr<ssf::SubtitleFile>::~CAutoPtr<ssf::SubtitleFile>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??0?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QAE@XZ PROC	; ATL::CAutoPtr<ssf::SubtitleFile>::CAutoPtr<ssf::SubtitleFile>, COMDAT
; _this$ = eax

; 709  : 	{

	mov	DWORD PTR [eax], 0

; 710  : 	}

	ret	0
??0?$CAutoPtr@VSubtitleFile@ssf@@@ATL@@QAE@XZ ENDP	; ATL::CAutoPtr<ssf::SubtitleFile>::CAutoPtr<ssf::SubtitleFile>
; Function compile flags: /Ogtpy
; File d:\-=svn=-\svplayer\src\subtitles\ssf.cpp
_TEXT	ENDS
;	COMDAT ?SetStream@CRenderer@ssf@@UAGJH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iStream$ = 12						; size = 4
?SetStream@CRenderer@ssf@@UAGJH@Z PROC			; ssf::CRenderer::SetStream, COMDAT

; 230  : 		return iStream == 0 ? S_OK : E_FAIL;

	mov	eax, DWORD PTR _iStream$[esp-4]
	neg	eax
	sbb	eax, eax
	and	eax, -2147467259			; 80004005H

; 231  : 	}

	ret	8
?SetStream@CRenderer@ssf@@UAGJH@Z ENDP			; ssf::CRenderer::SetStream
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetStream@CRenderer@ssf@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetStream@CRenderer@ssf@@UAGHXZ PROC			; ssf::CRenderer::GetStream, COMDAT

; 225  : 		return 0;

	xor	eax, eax

; 226  : 	}

	ret	4
?GetStream@CRenderer@ssf@@UAGHXZ ENDP			; ssf::CRenderer::GetStream
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetStreamCount@CRenderer@ssf@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetStreamCount@CRenderer@ssf@@UAGHXZ PROC		; ssf::CRenderer::GetStreamCount, COMDAT

; 200  : 		return 1;

	mov	eax, 1

; 201  : 	}

	ret	4
?GetStreamCount@CRenderer@ssf@@UAGHXZ ENDP		; ssf::CRenderer::GetStreamCount
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetClassID@CRenderer@ssf@@UAGJPAU_GUID@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pClassID$ = 12						; size = 4
?GetClassID@CRenderer@ssf@@UAGJPAU_GUID@@@Z PROC	; ssf::CRenderer::GetClassID, COMDAT

; 193  : 		return pClassID ? *pClassID = __uuidof(this), S_OK : E_POINTER;

	mov	eax, DWORD PTR _pClassID$[esp-4]
	test	eax, eax
	je	SHORT $LN3@GetClassID
	mov	ecx, DWORD PTR __GUID_e0593632_0ab7_47ca_8be1_e9d2a6a4825e
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __GUID_e0593632_0ab7_47ca_8be1_e9d2a6a4825e+4
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR __GUID_e0593632_0ab7_47ca_8be1_e9d2a6a4825e+8
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR __GUID_e0593632_0ab7_47ca_8be1_e9d2a6a4825e+12
	mov	DWORD PTR [eax+12], edx
	xor	eax, eax

; 194  : 	}

	ret	8
$LN3@GetClassID:

; 193  : 		return pClassID ? *pClassID = __uuidof(this), S_OK : E_POINTER;

	mov	eax, -2147467261			; 80004003H

; 194  : 	}

	ret	8
?GetClassID@CRenderer@ssf@@UAGJPAU_GUID@@@Z ENDP	; ssf::CRenderer::GetClassID
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?IsAnimated@CRenderer@ssf@@UAG_NPAU__POSITION@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pos$ = 12						; size = 4
?IsAnimated@CRenderer@ssf@@UAG_NPAU__POSITION@@@Z PROC	; ssf::CRenderer::IsAnimated, COMDAT

; 156  : 		return true;

	mov	al, 1

; 157  : 	}

	ret	8
?IsAnimated@CRenderer@ssf@@UAG_NPAU__POSITION@@@Z ENDP	; ssf::CRenderer::IsAnimated
_TEXT	ENDS
PUBLIC	__real@416312d000000000
EXTRN	__ftol2:PROC
;	COMDAT __real@416312d000000000
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlbase.h
CONST	SEGMENT
__real@416312d000000000 DQ 0416312d000000000r	; 1e+007
; Function compile flags: /Ogtpy
; File d:\-=svn=-\svplayer\src\subtitles\ssf.cpp
CONST	ENDS
;	COMDAT ?GetStop@CRenderer@ssf@@UAG_JPAU__POSITION@@N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pos$ = 12						; size = 4
_fps$ = 16						; size = 8
?GetStop@CRenderer@ssf@@UAG_JPAU__POSITION@@N@Z PROC	; ssf::CRenderer::GetStop, COMDAT

; 147  : 		CheckPointer(m_file, 0);

	mov	eax, DWORD PTR _this$[esp-4]
	mov	eax, DWORD PTR [eax+20]
	test	eax, eax
	je	SHORT $LN6@GetStop

; 148  : 
; 149  : 		size_t k = (size_t)pos-1;

	mov	ecx, DWORD PTR _pos$[esp-4]
	dec	ecx

; 150  : 		const SubtitleFile::Segment* s = m_file ? m_file->m_segments.GetSegment(k) : NULL;

	push	ecx
	lea	ecx, DWORD PTR [eax+96]
	call	?GetSegment@SegmentList@SubtitleFile@ssf@@QAEPBVSegment@23@I@Z ; ssf::SubtitleFile::SegmentList::GetSegment

; 151  : 		return s ? (REFERENCE_TIME)(s->m_stop*10000000) : 0;

	test	eax, eax
	je	SHORT $LN6@GetStop
	fld	DWORD PTR [eax+28]
	fmul	QWORD PTR __real@416312d000000000
	call	__ftol2

; 152  : 	}

	ret	16					; 00000010H
$LN6@GetStop:

; 151  : 		return s ? (REFERENCE_TIME)(s->m_stop*10000000) : 0;

	xor	eax, eax
	xor	edx, edx

; 152  : 	}

	ret	16					; 00000010H
?GetStop@CRenderer@ssf@@UAG_JPAU__POSITION@@N@Z ENDP	; ssf::CRenderer::GetStop
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetStart@CRenderer@ssf@@UAG_JPAU__POSITION@@N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pos$ = 12						; size = 4
_fps$ = 16						; size = 8
?GetStart@CRenderer@ssf@@UAG_JPAU__POSITION@@N@Z PROC	; ssf::CRenderer::GetStart, COMDAT

; 140  : 		size_t k = (size_t)pos-1;
; 141  : 		const SubtitleFile::Segment* s = m_file ? m_file->m_segments.GetSegment(k) : NULL;

	mov	eax, DWORD PTR _this$[esp-4]
	mov	eax, DWORD PTR [eax+20]
	test	eax, eax
	je	SHORT $LN5@GetStart
	mov	ecx, DWORD PTR _pos$[esp-4]
	dec	ecx
	push	ecx
	lea	ecx, DWORD PTR [eax+96]
	call	?GetSegment@SegmentList@SubtitleFile@ssf@@QAEPBVSegment@23@I@Z ; ssf::SubtitleFile::SegmentList::GetSegment

; 142  : 		return s ? (REFERENCE_TIME)(s->m_start*10000000) : 0;

	test	eax, eax
	je	SHORT $LN5@GetStart
	fld	DWORD PTR [eax+24]
	fmul	QWORD PTR __real@416312d000000000
	call	__ftol2

; 143  : 	}

	ret	16					; 00000010H
$LN5@GetStart:

; 142  : 		return s ? (REFERENCE_TIME)(s->m_start*10000000) : 0;

	xor	eax, eax
	xor	edx, edx

; 143  : 	}

	ret	16					; 00000010H
?GetStart@CRenderer@ssf@@UAG_JPAU__POSITION@@N@Z ENDP	; ssf::CRenderer::GetStart
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetNext@CRenderer@ssf@@UAGPAU__POSITION@@PAU3@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pos$ = 12						; size = 4
?GetNext@CRenderer@ssf@@UAGPAU__POSITION@@PAU3@@Z PROC	; ssf::CRenderer::GetNext, COMDAT

; 134  : 		size_t k = (size_t)pos;
; 135  : 		return m_file && m_file->m_segments.GetSegment(k) ? (POSITION)(++k) : NULL;

	mov	eax, DWORD PTR _this$[esp-4]
	mov	eax, DWORD PTR [eax+20]
	push	esi
	test	eax, eax
	je	SHORT $LN3@GetNext
	mov	esi, DWORD PTR _pos$[esp]
	push	esi
	lea	ecx, DWORD PTR [eax+96]
	call	?GetSegment@SegmentList@SubtitleFile@ssf@@QAEPBVSegment@23@I@Z ; ssf::SubtitleFile::SegmentList::GetSegment
	test	eax, eax
	je	SHORT $LN3@GetNext
	lea	eax, DWORD PTR [esi+1]
	pop	esi

; 136  : 	}

	ret	8
$LN3@GetNext:

; 134  : 		size_t k = (size_t)pos;
; 135  : 		return m_file && m_file->m_segments.GetSegment(k) ? (POSITION)(++k) : NULL;

	xor	eax, eax
	pop	esi

; 136  : 	}

	ret	8
?GetNext@CRenderer@ssf@@UAGPAU__POSITION@@PAU3@@Z ENDP	; ssf::CRenderer::GetNext
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetStartPosition@CRenderer@ssf@@UAGPAU__POSITION@@_JN@Z
_TEXT	SEGMENT
tv144 = 8						; size = 4
_k$ = 8							; size = 4
_this$ = 8						; size = 4
_rt$ = 12						; size = 8
_fps$ = 20						; size = 8
?GetStartPosition@CRenderer@ssf@@UAGPAU__POSITION@@_JN@Z PROC ; ssf::CRenderer::GetStartPosition, COMDAT

; 128  : 		size_t k;
; 129  : 		return m_file && m_file->m_segments.Lookup((float)rt/10000000, k) ? (POSITION)(++k) : NULL;

	mov	eax, DWORD PTR _this$[esp-4]
	mov	eax, DWORD PTR [eax+20]
	test	eax, eax
	je	SHORT $LN3@GetStartPo
	fild	QWORD PTR _rt$[esp-4]
	lea	ecx, DWORD PTR _k$[esp-4]
	push	ecx
	push	ecx
	fdiv	QWORD PTR __real@416312d000000000
	lea	ecx, DWORD PTR [eax+96]
	fstp	DWORD PTR tv144[esp+4]
	fld	DWORD PTR tv144[esp+4]
	fstp	DWORD PTR [esp]
	call	?Lookup@SegmentList@SubtitleFile@ssf@@QAE_NMAAI@Z ; ssf::SubtitleFile::SegmentList::Lookup
	test	al, al
	je	SHORT $LN3@GetStartPo
	mov	eax, DWORD PTR _k$[esp-4]
	inc	eax

; 130  : 	}

	ret	20					; 00000014H
$LN3@GetStartPo:

; 128  : 		size_t k;
; 129  : 		return m_file && m_file->m_segments.Lookup((float)rt/10000000, k) ? (POSITION)(++k) : NULL;

	xor	eax, eax

; 130  : 	}

	ret	20					; 00000014H
?GetStartPosition@CRenderer@ssf@@UAGPAU__POSITION@@_JN@Z ENDP ; ssf::CRenderer::GetStartPosition
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlcoll.h
;	COMDAT ?RemoveAll@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAEXXZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::RemoveAll, COMDAT
; _this$ = esi

; 1382 : 	while( m_nElements > 0 )

	cmp	DWORD PTR [esi+8], 0
	jbe	SHORT $LN7@RemoveAll
$LL13@RemoveAll:

; 1383 : 	{
; 1384 : 		CNode* pKill = m_pHead;

	mov	eax, DWORD PTR [esi]

; 1385 : 		ATLENSURE( pKill != NULL );

	test	eax, eax
	je	SHORT $LN42@RemoveAll

; 1386 : 
; 1387 : 		m_pHead = m_pHead->m_pNext;

	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi], ecx

; 1388 : 		FreeNode( pKill );

	push	eax
	mov	ecx, esi
	call	?FreeNode@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::FreeNode
	cmp	DWORD PTR [esi+8], 0
	ja	SHORT $LL13@RemoveAll
$LN7@RemoveAll:

; 1389 : 	}
; 1390 : 
; 1391 : 	ATLASSUME( m_nElements == 0 );
; 1392 : 	m_pHead = NULL;
; 1393 : 	m_pTail = NULL;
; 1394 : 	m_pFree = NULL;
; 1395 : 
; 1396 : 	if( m_pBlocks != NULL )

	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+16], 0
	test	eax, eax
	je	SHORT $LN1@RemoveAll
	push	edi
	npad	6

; 1397 : 	{
; 1398 : 		m_pBlocks->FreeDataChain();

$LL37@RemoveAll:
	mov	edi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, edi
	test	edi, edi
	jne	SHORT $LL37@RemoveAll

; 1399 : 		m_pBlocks = NULL;

	mov	DWORD PTR [esi+12], edi
	pop	edi
$LN1@RemoveAll:

; 1400 : 	}
; 1401 : }

	ret	0
$LN42@RemoveAll:

; 1385 : 		ATLENSURE( pKill != NULL );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN46@RemoveAll:
$LN45@RemoveAll:
	int	3
?RemoveAll@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAEXXZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::RemoveAll
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAE@XZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::~CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >, COMDAT
; _this$ = esi

; 1406 : 	RemoveAll();

	jmp	?RemoveAll@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::RemoveAll
??1?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAE@XZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::~CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetNext@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VSubtitle@ssf@@@2@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
_pos$ = 8						; size = 4
?GetNext@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VSubtitle@ssf@@@2@AAPAU__POSITION@@@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::GetNext, COMDAT
; _this$ = ecx

; 1298 : 	CNode* pNode;
; 1299 : 
; 1300 : 	ATLENSURE( pos != NULL );

	mov	ecx, DWORD PTR _pos$[esp-4]
	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	jne	SHORT $LN3@GetNext@2
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN8@GetNext@2:
$LN3@GetNext@2:

; 1301 : 	pNode = (CNode*)pos;
; 1302 : 	pos = POSITION( pNode->m_pNext );

	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 1303 : 
; 1304 : 	return( pNode->m_element );

	add	eax, 8

; 1305 : }

	ret	4
$LN7@GetNext@2:
?GetNext@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VSubtitle@ssf@@@2@AAPAU__POSITION@@@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::GetNext
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$CAutoPtrList@VSubtitle@ssf@@@ATL@@QAE@I@Z
_TEXT	SEGMENT
??0?$CAutoPtrList@VSubtitle@ssf@@@ATL@@QAE@I@Z PROC	; ATL::CAutoPtrList<ssf::Subtitle>::CAutoPtrList<ssf::Subtitle>, COMDAT
; _this$ = eax

; 1218 : 	{

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], 10			; 0000000aH

; 1219 : 	}

	ret	0
??0?$CAutoPtrList@VSubtitle@ssf@@@ATL@@QAE@I@Z ENDP	; ATL::CAutoPtrList<ssf::Subtitle>::CAutoPtrList<ssf::Subtitle>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$CAutoPtrList@VSubtitle@ssf@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CAutoPtrList@VSubtitle@ssf@@@ATL@@QAE@XZ PROC	; ATL::CAutoPtrList<ssf::Subtitle>::~CAutoPtrList<ssf::Subtitle>, COMDAT
; _this$ = esi
	jmp	?RemoveAll@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::RemoveAll
??1?$CAutoPtrList@VSubtitle@ssf@@@ATL@@QAE@XZ ENDP	; ATL::CAutoPtrList<ssf::Subtitle>::~CAutoPtrList<ssf::Subtitle>
; Function compile flags: /Ogtpy
; File d:\-=svn=-\svplayer\src\subtitles\ssf.h
_TEXT	ENDS
;	COMDAT ?Release@CRenderer@ssf@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Release@CRenderer@ssf@@UAGKXZ PROC			; ssf::CRenderer::Release, COMDAT

; 48   : 		DECLARE_IUNKNOWN

	mov	eax, DWORD PTR _this$[esp-4]
	mov	eax, DWORD PTR [eax-8]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _this$[esp-4], eax
	mov	edx, DWORD PTR [ecx+8]
	jmp	edx
?Release@CRenderer@ssf@@UAGKXZ ENDP			; ssf::CRenderer::Release
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?AddRef@CRenderer@ssf@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@CRenderer@ssf@@UAGKXZ PROC			; ssf::CRenderer::AddRef, COMDAT

; 48   : 		DECLARE_IUNKNOWN

	mov	eax, DWORD PTR _this$[esp-4]
	mov	eax, DWORD PTR [eax-8]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _this$[esp-4], eax
	mov	edx, DWORD PTR [ecx+4]
	jmp	edx
?AddRef@CRenderer@ssf@@UAGKXZ ENDP			; ssf::CRenderer::AddRef
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?QueryInterface@CRenderer@ssf@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?QueryInterface@CRenderer@ssf@@UAGJABU_GUID@@PAPAX@Z PROC ; ssf::CRenderer::QueryInterface, COMDAT

; 48   : 		DECLARE_IUNKNOWN

	mov	eax, DWORD PTR _this$[esp-4]
	mov	eax, DWORD PTR [eax-8]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _this$[esp-4], eax
	mov	eax, DWORD PTR [ecx]
	jmp	eax
?QueryInterface@CRenderer@ssf@@UAGJABU_GUID@@PAPAX@Z ENDP ; ssf::CRenderer::QueryInterface
; Function compile flags: /Odtpy
;	COMDAT ?Release@CRenderer@ssf@@W7AGKXZ
_TEXT	SEGMENT
?Release@CRenderer@ssf@@W7AGKXZ PROC			; [thunk]:ssf::CRenderer::Release`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?Release@CRenderer@ssf@@UAGKXZ		; ssf::CRenderer::Release
?Release@CRenderer@ssf@@W7AGKXZ ENDP			; [thunk]:ssf::CRenderer::Release`adjustor{8}'
; Function compile flags: /Odtpy
_TEXT	ENDS
;	COMDAT ?QueryInterface@CRenderer@ssf@@W7AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CRenderer@ssf@@W7AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:ssf::CRenderer::QueryInterface`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?QueryInterface@CRenderer@ssf@@UAGJABU_GUID@@PAPAX@Z ; ssf::CRenderer::QueryInterface
?QueryInterface@CRenderer@ssf@@W7AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ssf::CRenderer::QueryInterface`adjustor{8}'
; Function compile flags: /Odtpy
_TEXT	ENDS
;	COMDAT ?AddRef@CRenderer@ssf@@W7AGKXZ
_TEXT	SEGMENT
?AddRef@CRenderer@ssf@@W7AGKXZ PROC			; [thunk]:ssf::CRenderer::AddRef`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?AddRef@CRenderer@ssf@@UAGKXZ		; ssf::CRenderer::AddRef
?AddRef@CRenderer@ssf@@W7AGKXZ ENDP			; [thunk]:ssf::CRenderer::AddRef`adjustor{8}'
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlcoll.h
_TEXT	ENDS
;	COMDAT ?FreeNode@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z
_TEXT	SEGMENT
_pNode$ = 8						; size = 4
?FreeNode@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::FreeNode, COMDAT
; _this$ = ecx

; 1481 : {

	push	esi
	push	edi

; 1482 : 	pNode->~CNode();

	mov	edi, DWORD PTR _pNode$[esp+4]
	mov	esi, ecx
	mov	ecx, DWORD PTR [edi+8]
	test	ecx, ecx
	je	SHORT $LN19@FreeNode
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN19@FreeNode:
	mov	DWORD PTR [edi+8], 0

; 1483 : 	pNode->m_pNext = m_pFree;

	mov	eax, DWORD PTR [esi+16]
	mov	DWORD PTR [edi], eax

; 1484 : 	m_pFree = pNode;
; 1485 : 	ATLASSUME( m_nElements > 0 );
; 1486 : 	m_nElements--;

	add	DWORD PTR [esi+8], -1
	mov	DWORD PTR [esi+16], edi

; 1487 : 	if( m_nElements == 0 )

	jne	SHORT $LN1@FreeNode

; 1488 : 	{
; 1489 : 		RemoveAll();

	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::RemoveAll
$LN1@FreeNode:
	pop	edi
	pop	esi

; 1490 : 	}
; 1491 : }

	ret	4
?FreeNode@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::FreeNode
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft sdks\windows\v6.1\samples\multimedia\directshow\baseclasses\wxutil.h
xdata$x	SEGMENT
__unwindtable$?Render@CRenderer@ssf@@UAGJAAUSubPicDesc@@_JNAAUtagRECT@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Render@CRenderer@ssf@@UAGJAAUSubPicDesc@@_JNAAUtagRECT@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Render@CRenderer@ssf@@UAGJAAUSubPicDesc@@_JNAAUtagRECT@@@Z$1
__ehfuncinfo$?Render@CRenderer@ssf@@UAGJAAUSubPicDesc@@_JNAAUtagRECT@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Render@CRenderer@ssf@@UAGJAAUSubPicDesc@@_JNAAUtagRECT@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File d:\-=svn=-\svplayer\src\subtitles\ssf.cpp
xdata$x	ENDS
;	COMDAT ?Render@CRenderer@ssf@@UAGJAAUSubPicDesc@@_JNAAUtagRECT@@@Z
_TEXT	SEGMENT
tv420 = -108						; size = 4
$T247902 = -108						; size = 16
$T247900 = -108						; size = 8
_csAutoLock$ = -92					; size = 4
$T247903 = -88						; size = 16
$T247899 = -88						; size = 16
_bbox2$ = -72						; size = 16
$T247901 = -56						; size = 16
_subs$ = -40						; size = 24
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_spd$ = 12						; size = 4
_rt$ = 16						; size = 8
_fps$ = 24						; size = 8
_bbox$ = 32						; size = 4
?Render@CRenderer@ssf@@UAGJAAUSubPicDesc@@_JNAAUtagRECT@@@Z PROC ; ssf::CRenderer::Render, COMDAT

; 160  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?Render@CRenderer@ssf@@UAGJAAUSubPicDesc@@_JNAAUtagRECT@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi

; 161  : 		CheckPointer(m_file, E_UNEXPECTED);

	mov	edi, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edi+20]
	xor	ebx, ebx
	cmp	eax, ebx
	jne	SHORT $LN6@Render
$LN93@Render:
	mov	eax, -2147418113			; 8000ffffH

; 187  : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+120]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
$LN6@Render:

; 162  : 		CheckPointer(m_renderer, E_UNEXPECTED);	

	cmp	DWORD PTR [edi+24], ebx
	je	SHORT $LN93@Render

; 163  : 
; 164  : 		if(spd.type != MSP_RGB32) return E_INVALIDARG;

	mov	esi, DWORD PTR _spd$[ebp]
	cmp	DWORD PTR [esi], ebx
	je	SHORT $LN4@Render
	mov	eax, -2147024809			; 80070057H

; 187  : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+120]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
$LN4@Render:

; 165  : 
; 166  : 		CAutoLock csAutoLock(m_pLock);

	mov	eax, DWORD PTR [edi+4]
	push	eax
	mov	DWORD PTR _csAutoLock$[esp+124], eax
	call	DWORD PTR __imp__EnterCriticalSection@4

; 167  : 
; 168  : 		CRect bbox2;
; 169  : 		bbox2.SetRectEmpty();

	lea	eax, DWORD PTR _bbox2$[esp+120]
	push	eax
	mov	DWORD PTR __$EHRec$[esp+132], ebx
	call	DWORD PTR __imp__SetRectEmpty@4

; 170  : 
; 171  : 		CAutoPtrList<Subtitle> subs;

	mov	DWORD PTR _subs$[esp+120], ebx
	mov	DWORD PTR _subs$[esp+124], ebx
	mov	DWORD PTR _subs$[esp+128], ebx
	mov	DWORD PTR _subs$[esp+132], ebx
	mov	DWORD PTR _subs$[esp+136], ebx
	mov	DWORD PTR _subs$[esp+140], 10		; 0000000aH

; 172  : 		m_file->Lookup((float)rt/10000000, subs);

	fild	QWORD PTR _rt$[ebp]
	mov	BYTE PTR __$EHRec$[esp+128], 1
	lea	ecx, DWORD PTR _subs$[esp+120]
	fdiv	QWORD PTR __real@416312d000000000
	push	ecx
	push	ecx
	mov	ecx, DWORD PTR [edi+20]
	fstp	DWORD PTR tv420[esp+128]
	fld	DWORD PTR tv420[esp+128]
	fstp	DWORD PTR [esp]
	call	?Lookup@SubtitleFile@ssf@@QAE_NMAAV?$CAutoPtrList@VSubtitle@ssf@@@ATL@@@Z ; ssf::SubtitleFile::Lookup

; 173  : 
; 174  : 		m_renderer->NextSegment(subs);

	mov	ecx, DWORD PTR [edi+24]
	lea	edx, DWORD PTR _subs$[esp+120]
	push	edx
	call	?NextSegment@Renderer@ssf@@QAEXABV?$CAutoPtrList@VSubtitle@ssf@@@ATL@@@Z ; ssf::Renderer::NextSegment

; 175  : 
; 176  : 		POSITION pos = subs.GetHeadPosition();

	mov	edi, DWORD PTR _subs$[esp+120]

; 177  : 		while(pos)

	cmp	edi, ebx
	je	SHORT $LN2@Render
$LL3@Render:

; 178  : 		{
; 179  : 			const Subtitle* s = subs.GetNext(pos);

	cmp	edi, ebx
	je	$LN89@Render
	mov	eax, edi
	mov	ebx, DWORD PTR [eax+8]
	mov	edi, DWORD PTR [edi]

; 180  : 			const RenderedSubtitle* rs = m_renderer->Lookup(s, CSize(spd.w, spd.h), spd.vidrect);

	lea	eax, DWORD PTR [esi+36]
	push	eax
	lea	ecx, DWORD PTR $T247899[esp+124]
	push	ecx
	call	DWORD PTR __imp__CopyRect@8
	mov	edx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+24]
	mov	DWORD PTR $T247900[esp+120], edx
	lea	edx, DWORD PTR $T247899[esp+120]
	mov	DWORD PTR $T247900[esp+124], eax
	push	edx
	lea	eax, DWORD PTR $T247900[esp+124]
	push	eax
	push	ebx
	call	?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z ; ssf::Renderer::Lookup

; 181  : 			if(rs) bbox2 |= rs->Draw(spd);

	test	eax, eax
	je	SHORT $LN66@Render
	push	esi
	lea	ecx, DWORD PTR $T247901[esp+124]
	push	ecx
	mov	ecx, eax
	call	?Draw@RenderedSubtitle@ssf@@QBE?AVCRect@@AAUSubPicDesc@@@Z ; ssf::RenderedSubtitle::Draw
	push	eax
	lea	edx, DWORD PTR _bbox2$[esp+124]
	push	edx
	mov	eax, edx
	push	eax
	call	DWORD PTR __imp__UnionRect@12
$LN66@Render:
	xor	ebx, ebx
	test	edi, edi
	jne	SHORT $LL3@Render
$LN2@Render:

; 182  : 		}
; 183  : 
; 184  : 		bbox = bbox2 & CRect(0, 0, spd.w, spd.h);

	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi+8]
	lea	eax, DWORD PTR $T247902[esp+120]
	mov	DWORD PTR $T247902[esp+128], ecx
	push	eax
	lea	ecx, DWORD PTR _bbox2$[esp+124]
	mov	DWORD PTR $T247902[esp+136], edx
	push	ecx
	lea	edx, DWORD PTR $T247903[esp+128]
	push	edx
	mov	DWORD PTR $T247902[esp+132], ebx
	mov	DWORD PTR $T247902[esp+136], ebx
	call	DWORD PTR __imp__IntersectRect@12
	mov	eax, DWORD PTR _bbox$[ebp]
	mov	ecx, DWORD PTR $T247903[esp+120]
	mov	edx, DWORD PTR $T247903[esp+124]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR $T247903[esp+128]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR $T247903[esp+132]
	mov	DWORD PTR [eax+8], ecx

; 185  : 
; 186  : 		return S_OK;

	lea	esi, DWORD PTR _subs$[esp+120]
	mov	DWORD PTR [eax+12], edx
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::RemoveAll
	mov	eax, DWORD PTR _csAutoLock$[esp+120]
	push	eax
	call	DWORD PTR __imp__LeaveCriticalSection@4

; 187  : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+120]
	pop	edi
	pop	esi
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
$LN89@Render:

; 178  : 		{
; 179  : 			const Subtitle* s = subs.GetNext(pos);

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN94@Render:
$LN92@Render:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Render@CRenderer@ssf@@UAGJAAUSubPicDesc@@_JNAAUtagRECT@@@Z$0:
	lea	ecx, DWORD PTR _csAutoLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__unwindfunclet$?Render@CRenderer@ssf@@UAGJAAUSubPicDesc@@_JNAAUtagRECT@@@Z$1:
	lea	esi, DWORD PTR _subs$[ebp]
	jmp	??1?$CAutoPtrList@VSubtitle@ssf@@@ATL@@QAE@XZ
__ehhandler$?Render@CRenderer@ssf@@UAGJAAUSubPicDesc@@_JNAAUtagRECT@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?Render@CRenderer@ssf@@UAGJAAUSubPicDesc@@_JNAAUtagRECT@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Render@CRenderer@ssf@@UAGJAAUSubPicDesc@@_JNAAUtagRECT@@@Z ENDP ; ssf::CRenderer::Render
; Function compile flags: /Ogtpy
;	COMDAT ??1WCharInputStream@ssf@@UAE@XZ
_TEXT	SEGMENT
??1WCharInputStream@ssf@@UAE@XZ PROC			; ssf::WCharInputStream::~WCharInputStream, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+40]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN11@WCharInput
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN11@WCharInput:
	mov	ecx, esi
	pop	esi
	jmp	??1InputStream@ssf@@UAE@XZ		; ssf::InputStream::~InputStream
??1WCharInputStream@ssf@@UAE@XZ ENDP			; ssf::WCharInputStream::~WCharInputStream
_TEXT	ENDS
PUBLIC	??1CRenderer@ssf@@UAE@XZ			; ssf::CRenderer::~CRenderer
; Function compile flags: /Ogtpy
;	COMDAT ??1CRenderer@ssf@@UAE@XZ
_TEXT	SEGMENT
??1CRenderer@ssf@@UAE@XZ PROC				; ssf::CRenderer::~CRenderer, COMDAT
; _this$ = ecx

; 40   : 	{

	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7CRenderer@ssf@@6BCUnknown@@@
	mov	DWORD PTR [esi+12], OFFSET ??_7CRenderer@ssf@@6BISubPicProvider@@@
	mov	DWORD PTR [esi+20], OFFSET ??_7CRenderer@ssf@@6B@

; 41   : 	}

	mov	ecx, DWORD PTR [esi+36]
	test	ecx, ecx
	je	SHORT $LN12@CRenderer
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN12@CRenderer:
	mov	DWORD PTR [esi+36], 0
	mov	ecx, DWORD PTR [esi+32]
	test	ecx, ecx
	je	SHORT $LN18@CRenderer
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN18@CRenderer:
	mov	DWORD PTR [esi+32], 0
	mov	eax, DWORD PTR [esi+28]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN26@CRenderer
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN26@CRenderer:
	mov	eax, DWORD PTR [esi+24]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN35@CRenderer
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN35@CRenderer:
	mov	DWORD PTR [esi], OFFSET ??_7ISubPicProviderImpl@@6BCUnknown@@@
	mov	DWORD PTR [esi+12], OFFSET ??_7ISubPicProviderImpl@@6BISubPicProvider@@@
	lea	ecx, DWORD PTR [esi+4]
	pop	esi
	jmp	??1CBaseObject@@QAE@XZ			; CBaseObject::~CBaseObject
??1CRenderer@ssf@@UAE@XZ ENDP				; ssf::CRenderer::~CRenderer
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GCRenderer@ssf@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCRenderer@ssf@@UAEPAXI@Z PROC			; ssf::CRenderer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1CRenderer@ssf@@UAE@XZ		; ssf::CRenderer::~CRenderer
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@3
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@3:
	mov	eax, esi
	pop	esi
	ret	4
??_GCRenderer@ssf@@UAEPAXI@Z ENDP			; ssf::CRenderer::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0CRenderer@ssf@@QAE@PAVCCritSec@@@Z		; ssf::CRenderer::CRenderer
; Function compile flags: /Ogtpy
;	COMDAT ??0CRenderer@ssf@@QAE@PAVCCritSec@@@Z
_TEXT	SEGMENT
_pLock$ = 8						; size = 4
??0CRenderer@ssf@@QAE@PAVCCritSec@@@Z PROC		; ssf::CRenderer::CRenderer, COMDAT
; _this$ = ecx

; 36   : 	{

	push	esi
	push	0
	push	0
	mov	esi, ecx
	call	??0CUnknown@@QAE@PB_WPAUIUnknown@@@Z	; CUnknown::CUnknown
	mov	eax, DWORD PTR _pLock$[esp]
	mov	DWORD PTR [esi+12], OFFSET ??_7ISubPicProvider@@6B@
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], OFFSET ??_7ISubStream@@6B@
	mov	DWORD PTR [esi], OFFSET ??_7CRenderer@ssf@@6BCUnknown@@@
	mov	DWORD PTR [esi+12], OFFSET ??_7CRenderer@ssf@@6BISubPicProvider@@@
	mov	DWORD PTR [esi+20], OFFSET ??_7CRenderer@ssf@@6B@
	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
	test	eax, eax
	jne	SHORT $LN23@CRenderer@2
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN53@CRenderer@2:
$LN23@CRenderer@2:
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+12]
	call	eax
	add	eax, 16					; 00000010H
	mov	DWORD PTR [esi+24], eax
	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
	test	eax, eax
	jne	SHORT $LN39@CRenderer@2
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN54@CRenderer@2:
$LN39@CRenderer@2:
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+12]
	call	eax
	add	eax, 16					; 00000010H
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], 0
	mov	DWORD PTR [esi+36], 0

; 37   : 	}

	mov	eax, esi
	pop	esi
	ret	4
$LN52@CRenderer@2:
??0CRenderer@ssf@@QAE@PAVCCritSec@@@Z ENDP		; ssf::CRenderer::CRenderer
; Function compile flags: /Ogtpy
;	COMDAT ?GetStreamInfo@CRenderer@ssf@@UAGJHPAPA_WPAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iStream$ = 12						; size = 4
_ppName$ = 16						; size = 4
_pLCID$ = 20						; size = 4
?GetStreamInfo@CRenderer@ssf@@UAGJHPAPA_WPAK@Z PROC	; ssf::CRenderer::GetStreamInfo, COMDAT

; 205  : 		if(iStream != 0) return E_INVALIDARG;

	cmp	DWORD PTR _iStream$[esp-4], 0
	je	SHORT $LN4@GetStreamI
	mov	eax, -2147024809			; 80070057H

; 221  : 	}

	ret	16					; 00000010H
$LN4@GetStreamI:
	push	esi

; 206  : 
; 207  : 		if(ppName)

	mov	esi, DWORD PTR _ppName$[esp]
	push	edi
	test	esi, esi
	je	SHORT $LN32@GetStreamI

; 208  : 		{
; 209  : 			if(!(*ppName = (WCHAR*)CoTaskMemAlloc((m_name.GetLength()+1)*sizeof(WCHAR))))

	mov	edi, DWORD PTR _this$[esp+4]
	mov	eax, DWORD PTR [edi+8]
	mov	eax, DWORD PTR [eax-12]
	lea	ecx, DWORD PTR [eax+eax+2]
	push	ecx
	call	DWORD PTR __imp__CoTaskMemAlloc@4
	mov	DWORD PTR [esi], eax
	test	eax, eax
	jne	SHORT $LN2@GetStreamI
	pop	edi

; 210  : 				return E_OUTOFMEMORY;

	mov	eax, -2147024882			; 8007000eH
	pop	esi

; 221  : 	}

	ret	16					; 00000010H
$LN2@GetStreamI:

; 211  : 
; 212  : 			wcscpy(*ppName, CStringW(m_name));

	mov	eax, DWORD PTR [edi+8]
	sub	eax, 16					; 00000010H
	push	eax
	call	?CloneData@?$CSimpleStringT@_W$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<wchar_t,0>::CloneData
	mov	esi, DWORD PTR [esi]
	add	esp, 4
	add	eax, 16					; 00000010H
	mov	edx, eax
$LL7@GetStreamI:
	movzx	ecx, WORD PTR [edx]
	mov	WORD PTR [esi], cx
	add	edx, 2
	add	esi, 2
	test	cx, cx
	jne	SHORT $LL7@GetStreamI
	add	eax, -16				; fffffff0H
	lea	edx, DWORD PTR [eax+12]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [edx], ecx
	dec	ecx
	test	ecx, ecx
	jg	SHORT $LN32@GetStreamI
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN32@GetStreamI:

; 213  : 		}
; 214  : 
; 215  : 		if(pLCID)

	mov	eax, DWORD PTR _pLCID$[esp+4]
	test	eax, eax
	je	SHORT $LN1@GetStreamI

; 216  : 		{
; 217  : 			*pLCID = 0; // TODO

	mov	DWORD PTR [eax], 0
$LN1@GetStreamI:
	pop	edi

; 218  : 		}
; 219  : 
; 220  : 		return S_OK;

	xor	eax, eax
	pop	esi

; 221  : 	}

	ret	16					; 00000010H
?GetStreamInfo@CRenderer@ssf@@UAGJHPAPA_WPAK@Z ENDP	; ssf::CRenderer::GetStreamInfo
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?NonDelegatingQueryInterface@CRenderer@ssf@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?NonDelegatingQueryInterface@CRenderer@ssf@@UAGJABU_GUID@@PAPAX@Z PROC ; ssf::CRenderer::NonDelegatingQueryInterface, COMDAT

; 113  : 	{

	push	edi

; 114  : 		CheckPointer(ppv, E_POINTER);

	mov	edi, DWORD PTR _ppv$[esp]
	test	edi, edi
	jne	SHORT $LN1@NonDelegat
	mov	eax, -2147467261			; 80004003H
	pop	edi

; 122  : 	}

	ret	12					; 0000000cH
$LN1@NonDelegat:
	push	esi

; 115  : 		*ppv = NULL;
; 116  : 
; 117  : 		return 
; 118  : 			QI(IPersist)
; 119  : 			QI(ISubStream)
; 120  : 			QI(ISubPicProvider)
; 121  : 			__super::NonDelegatingQueryInterface(riid, ppv);

	mov	esi, DWORD PTR _riid$[esp+4]
	push	OFFSET __GUID_0000010c_0000_0000_c000_000000000046
	push	esi
	mov	DWORD PTR [edi], 0
	call	_IsEqualGUID
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN22@NonDelegat
	push	OFFSET __GUID_de11e2fb_02d3_45e4_a174_6b7ce2783bdb
	push	esi
	call	_IsEqualGUID
	add	esp, 8
	test	eax, eax
	je	SHORT $LN12@NonDelegat
$LN22@NonDelegat:
	mov	eax, DWORD PTR _this$[esp+4]
	test	eax, eax
	je	SHORT $LN8@NonDelegat
	add	eax, 20					; 00000014H
	push	edi
	push	eax
	call	_GetInterface@8
	pop	esi
	pop	edi

; 122  : 	}

	ret	12					; 0000000cH
$LN12@NonDelegat:

; 115  : 		*ppv = NULL;
; 116  : 
; 117  : 		return 
; 118  : 			QI(IPersist)
; 119  : 			QI(ISubStream)
; 120  : 			QI(ISubPicProvider)
; 121  : 			__super::NonDelegatingQueryInterface(riid, ppv);

	push	OFFSET __GUID_d62b9a1a_879a_42db_ab04_88aa8f243cfd
	push	esi
	call	_IsEqualGUID
	add	esp, 8
	test	eax, eax
	mov	eax, DWORD PTR _this$[esp+4]
	je	SHORT $LN10@NonDelegat
	test	eax, eax
	je	SHORT $LN8@NonDelegat
	add	eax, 12					; 0000000cH
	push	edi
	push	eax
	call	_GetInterface@8
	pop	esi
	pop	edi

; 122  : 	}

	ret	12					; 0000000cH
$LN8@NonDelegat:

; 115  : 		*ppv = NULL;
; 116  : 
; 117  : 		return 
; 118  : 			QI(IPersist)
; 119  : 			QI(ISubStream)
; 120  : 			QI(ISubPicProvider)
; 121  : 			__super::NonDelegatingQueryInterface(riid, ppv);

	xor	eax, eax
	push	edi
	push	eax
	call	_GetInterface@8
	pop	esi
	pop	edi

; 122  : 	}

	ret	12					; 0000000cH
$LN10@NonDelegat:

; 115  : 		*ppv = NULL;
; 116  : 
; 117  : 		return 
; 118  : 			QI(IPersist)
; 119  : 			QI(ISubStream)
; 120  : 			QI(ISubPicProvider)
; 121  : 			__super::NonDelegatingQueryInterface(riid, ppv);

	push	edi
	push	esi
	push	eax
	call	?NonDelegatingQueryInterface@ISubPicProviderImpl@@UAGJABU_GUID@@PAPAX@Z ; ISubPicProviderImpl::NonDelegatingQueryInterface
	pop	esi
	pop	edi

; 122  : 	}

	ret	12					; 0000000cH
?NonDelegatingQueryInterface@CRenderer@ssf@@UAGJABU_GUID@@PAPAX@Z ENDP ; ssf::CRenderer::NonDelegatingQueryInterface
PUBLIC	?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; ssf::CRenderer::Open
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
__unwindtable$?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z$2
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z$4
	DD	00H
	DD	00H
__catchsym$?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z$5 DD 08H
	DD	FLAT:??_R0?AVException@ssf@@@8
	DD	0ffffffe8H
	DD	FLAT:__catch$?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z$0
__tryblocktable$?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z DD 01H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z$5
__ehfuncinfo$?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File d:\-=svn=-\svplayer\src\subtitles\ssf.cpp
xdata$x	ENDS
;	COMDAT ?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
$T295361 = -20						; size = 4
__$EHRec$ = -16						; size = 16
$T295365 = 8						; size = 4
_s$ = 8							; size = 4
_name$ = 12						; size = 4
?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z PROC ; ssf::CRenderer::Open, COMDAT
; _this$ = ecx

; 76   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, ecx
	xor	edi, edi

; 77   : 		m_fn.Empty();

	lea	ecx, DWORD PTR [esi+24]
	mov	DWORD PTR __$EHRec$[ebp+12], edi
	call	?Empty@?$CSimpleStringT@_W$0A@@ATL@@QAEXXZ ; ATL::CSimpleStringT<wchar_t,0>::Empty

; 78   : 		m_name.Empty();

	lea	ebx, DWORD PTR [esi+28]
	mov	ecx, ebx
	call	?Empty@?$CSimpleStringT@_W$0A@@ATL@@QAEXXZ ; ATL::CSimpleStringT<wchar_t,0>::Empty

; 79   : 		m_file.Free();

	mov	ecx, DWORD PTR [esi+32]
	cmp	ecx, edi
	je	SHORT $LN17@Open
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN17@Open:
	mov	DWORD PTR [esi+32], edi

; 80   : 		m_renderer.Free();

	mov	ecx, DWORD PTR [esi+36]
	cmp	ecx, edi
	je	SHORT $LN21@Open
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN21@Open:

; 81   : 
; 82   : 		try
; 83   : 		{
; 84   : 			m_file.Attach(new SubtitleFile());

	push	136					; 00000088H
	mov	DWORD PTR [esi+36], edi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4
	mov	DWORD PTR $T295361[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	cmp	ecx, edi
	je	SHORT $LN4@Open
	call	??0SubtitleFile@ssf@@QAE@XZ		; ssf::SubtitleFile::SubtitleFile
	mov	ecx, eax
	jmp	SHORT $LN5@Open
$LN4@Open:
	xor	ecx, ecx
$LN5@Open:
	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 85   : 			m_file->Parse(s);

	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	DWORD PTR [esi+32], ecx
	call	?Parse@SubtitleFile@ssf@@QAEXAAVInputStream@2@@Z ; ssf::SubtitleFile::Parse

; 86   : 			m_renderer.Attach(new Renderer());

	push	320					; 00000140H
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4
	mov	DWORD PTR $T295365[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	cmp	ecx, edi
	je	SHORT $LN6@Open
	call	??0Renderer@ssf@@QAE@XZ			; ssf::Renderer::Renderer
	jmp	SHORT $LN7@Open
$LN6@Open:
	xor	eax, eax
$LN7@Open:

; 87   : 			m_name = name;

	lea	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	ecx, ebx
	mov	DWORD PTR [esi+36], eax
	call	??4?$CSimpleStringT@_W$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<wchar_t,0>::operator=

; 88   : 			return true;

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR _name$[ebp]
	add	eax, -16				; fffffff0H
	lea	edx, DWORD PTR [eax+12]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [edx], ecx
	dec	ecx
	test	ecx, ecx
	jg	SHORT $LN55@Open
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN55@Open:
	mov	al, 1

; 96   : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
__catch$?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z$0:

; 89   : 		}
; 90   : 		catch(Exception& e)
; 91   : 		{
; 92   : 			TRACE(_T("%s\n"), e.ToString());
; 93   : 		}

	mov	eax, $LN14@Open
	ret	0
$LN14@Open:

; 94   : 
; 95   : 		return false;

	lea	ecx, DWORD PTR _name$[ebp]
	call	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >

; 96   : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	xor	al, al
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z$2:
	lea	ecx, DWORD PTR _name$[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__unwindfunclet$?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z$3:
	mov	eax, DWORD PTR $T295361[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z$4:
	mov	eax, DWORD PTR $T295365[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ENDP ; ssf::CRenderer::Open
PUBLIC	?Append@CRenderer@ssf@@QAEX_J0PB_W@Z		; ssf::CRenderer::Append
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
__unwindtable$?Append@CRenderer@ssf@@QAEX_J0PB_W@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?Append@CRenderer@ssf@@QAEX_J0PB_W@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?Append@CRenderer@ssf@@QAEX_J0PB_W@Z$4
	DD	0ffffffffH
	DD	00H
__catchsym$?Append@CRenderer@ssf@@QAEX_J0PB_W@Z$6 DD 08H
	DD	FLAT:??_R0?AVException@ssf@@@8
	DD	0ffffffb8H
	DD	FLAT:__catch$?Append@CRenderer@ssf@@QAEX_J0PB_W@Z$0
__tryblocktable$?Append@CRenderer@ssf@@QAEX_J0PB_W@Z DD 00H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?Append@CRenderer@ssf@@QAEX_J0PB_W@Z$6
__ehfuncinfo$?Append@CRenderer@ssf@@QAEX_J0PB_W@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?Append@CRenderer@ssf@@QAEX_J0PB_W@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Append@CRenderer@ssf@@QAEX_J0PB_W@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File d:\-=svn=-\svplayer\src\subtitles\ssf.cpp
xdata$x	ENDS
;	COMDAT ?Append@CRenderer@ssf@@QAEX_J0PB_W@Z
_TEXT	SEGMENT
$T332218 = -68						; size = 48
__$EHRec$ = -16						; size = 16
_rtStart$ = 8						; size = 8
_rtStop$ = 16						; size = 8
tv214 = 20						; size = 4
tv212 = 20						; size = 4
$T332219 = 20						; size = 4
_str$ = 24						; size = 4
?Append@CRenderer@ssf@@QAEX_J0PB_W@Z PROC		; ssf::CRenderer::Append, COMDAT
; _this$ = ecx

; 99   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Append@CRenderer@ssf@@QAEX_J0PB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 60					; 0000003cH
	push	ebx
	push	esi
	mov	esi, ecx

; 100  : 		if(!m_file) return;

	mov	eax, DWORD PTR [esi+32]
	xor	ebx, ebx
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	cmp	eax, ebx
	je	SHORT $LN10@Append

; 101  : 
; 102  : 		try
; 103  : 		{
; 104  : 			m_file->Append(ssf::WCharInputStream(str), (float)rtStart / 10000000, (float)rtStop / 10000000);

	fild	QWORD PTR _rtStop$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	fld	QWORD PTR __real@416312d000000000
	push	ebx
	sub	esp, 12					; 0000000cH
	fdiv	ST(1), ST(0)
	mov	eax, DWORD PTR _str$[ebp]
	mov	ecx, esp
	fxch	ST(1)
	fstp	DWORD PTR tv214[ebp]
	fld	DWORD PTR tv214[ebp]
	fstp	DWORD PTR [esp+8]
	fild	QWORD PTR _rtStart$[ebp]
	fdivrp	ST(1), ST(0)
	fstp	DWORD PTR tv212[ebp]
	fld	DWORD PTR tv212[ebp]
	fstp	DWORD PTR [esp+4]
	mov	DWORD PTR $T332219[ebp], esp
	push	eax
	call	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
	lea	ecx, DWORD PTR $T332218[ebp]
	call	??0WCharInputStream@ssf@@QAE@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; ssf::WCharInputStream::WCharInputStream
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	ecx, DWORD PTR [esi+32]
	push	eax
	call	?Append@SubtitleFile@ssf@@QAEXAAVInputStream@2@MM_N@Z ; ssf::SubtitleFile::Append
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	mov	eax, DWORD PTR $T332218[ebp+40]
	add	eax, -16				; fffffff0H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN31@Append
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN31@Append:
	lea	ecx, DWORD PTR $T332218[ebp]
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	call	??1InputStream@ssf@@UAE@XZ		; ssf::InputStream::~InputStream
$LN10@Append:

; 110  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
__catch$?Append@CRenderer@ssf@@QAEX_J0PB_W@Z$0:

; 105  : 		}
; 106  : 		catch(Exception& e)
; 107  : 		{
; 108  : 			TRACE(_T("%s\n"), e.ToString());
; 109  : 		}

	mov	eax, $LN10@Append
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Append@CRenderer@ssf@@QAEX_J0PB_W@Z$3:
	lea	ecx, DWORD PTR $T332218[ebp]
	jmp	??1WCharInputStream@ssf@@UAE@XZ
__unwindfunclet$?Append@CRenderer@ssf@@QAEX_J0PB_W@Z$4:
	lea	ecx, DWORD PTR $T332218[ebp]
	jmp	??1InputStream@ssf@@UAE@XZ		; ssf::InputStream::~InputStream
__ehhandler$?Append@CRenderer@ssf@@QAEX_J0PB_W@Z:
	mov	eax, OFFSET __ehfuncinfo$?Append@CRenderer@ssf@@QAEX_J0PB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Append@CRenderer@ssf@@QAEX_J0PB_W@Z ENDP		; ssf::CRenderer::Append
PUBLIC	?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z ; ssf::CRenderer::Open
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
__unwindtable$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z$6
	DD	02H
	DD	FLAT:__unwindfunclet$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z$7
	DD	01H
	DD	00H
	DD	06H
	DD	FLAT:__unwindfunclet$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z$8
	DD	07H
	DD	FLAT:__unwindfunclet$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z$9
	DD	06H
	DD	FLAT:__unwindfunclet$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z$9
	DD	01H
	DD	00H
__catchsym$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z$12 DD 08H
	DD	FLAT:??_R0?AVException@ssf@@@8
	DD	0ffffffb4H
	DD	FLAT:__catch$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z$0
__tryblocktable$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z DD 06H
	DD	09H
	DD	0aH
	DD	01H
	DD	FLAT:__catchsym$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z$12
__ehfuncinfo$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File d:\-=svn=-\svplayer\src\subtitles\ssf.cpp
xdata$x	ENDS
;	COMDAT ?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z
_TEXT	SEGMENT
$T332298 = -72						; size = 44
tv544 = -28						; size = 4
$T332297 = -24						; size = 4
$T332295 = -24						; size = 4
$T332294 = -24						; size = 4
$T332293 = -24						; size = 4
_str$125002 = -20					; size = 4
__$EHRec$ = -16						; size = 16
_fn$ = 8						; size = 4
_name$ = 12						; size = 4
?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z PROC ; ssf::CRenderer::Open, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	edi, ecx

; 45   : 		m_fn.Empty();

	lea	ecx, DWORD PTR [edi+24]
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	DWORD PTR tv544[ebp], ecx
	call	?Empty@?$CSimpleStringT@_W$0A@@ATL@@QAEXXZ ; ATL::CSimpleStringT<wchar_t,0>::Empty

; 46   : 		m_name.Empty();

	lea	ecx, DWORD PTR [edi+28]
	call	?Empty@?$CSimpleStringT@_W$0A@@ATL@@QAEXXZ ; ATL::CSimpleStringT<wchar_t,0>::Empty

; 47   : 		m_file.Free();

	mov	ecx, DWORD PTR [edi+32]
	xor	esi, esi
	cmp	ecx, esi
	je	SHORT $LN20@Open@2
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN20@Open@2:
	mov	DWORD PTR [edi+32], esi

; 48   : 		m_renderer.Free();

	mov	ecx, DWORD PTR [edi+36]
	cmp	ecx, esi
	je	SHORT $LN24@Open@2
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN24@Open@2:

; 49   : 
; 50   : 		if(name.IsEmpty())

	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR [edi+36], esi
	cmp	DWORD PTR [eax-12], esi
	jne	$LN112@Open@2

; 51   : 		{
; 52   : 			CString str = fn;

	mov	eax, DWORD PTR _fn$[ebp]
	add	eax, -16				; fffffff0H
	push	eax
	call	?CloneData@?$CSimpleStringT@_W$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<wchar_t,0>::CloneData
	add	eax, 16					; 00000010H
	add	esp, 4
	mov	DWORD PTR _str$125002[ebp], eax

; 53   : 			str.Replace('\\', '/');

	push	47					; 0000002fH
	mov	bl, 2
	push	92					; 0000005cH
	lea	ecx, DWORD PTR _str$125002[ebp]
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	call	?Replace@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEH_W0@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Replace

; 54   : 			name = str.Left(str.ReverseFind('.'));

	mov	esi, DWORD PTR _str$125002[ebp]
	push	46					; 0000002eH
	push	esi
	call	_wcsrchr
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN45@Open@2
	or	eax, -1
	jmp	SHORT $LN46@Open@2
$LN45@Open@2:
	sub	eax, esi
	sar	eax, 1
$LN46@Open@2:
	push	eax
	lea	ecx, DWORD PTR $T332293[ebp]
	push	ecx
	lea	ecx, DWORD PTR _str$125002[ebp]
	call	?Left@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBE?AV12@H@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Left
	push	eax
	lea	ecx, DWORD PTR _name$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	call	??4?$CSimpleStringT@_W$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<wchar_t,0>::operator=
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	eax, DWORD PTR $T332293[ebp]
	add	eax, -16				; fffffff0H
	lea	edx, DWORD PTR [eax+12]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [edx], ecx
	dec	ecx
	test	ecx, ecx
	jg	SHORT $LN61@Open@2
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN61@Open@2:

; 55   : 			name = name.Mid(name.ReverseFind('/')+1);

	mov	ecx, DWORD PTR _name$[ebp]
	push	47					; 0000002fH
	push	ecx
	call	_wcsrchr
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN66@Open@2
	or	eax, -1
	jmp	SHORT $LN67@Open@2
$LN66@Open@2:
	sub	eax, DWORD PTR _name$[ebp]
	sar	eax, 1
$LN67@Open@2:
	inc	eax
	push	eax
	lea	edx, DWORD PTR $T332294[ebp]
	push	edx
	lea	ecx, DWORD PTR _name$[ebp]
	call	?Mid@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBE?AV12@H@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Mid
	push	eax
	lea	ecx, DWORD PTR _name$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	call	??4?$CSimpleStringT@_W$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<wchar_t,0>::operator=
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	eax, DWORD PTR $T332294[ebp]
	add	eax, -16				; fffffff0H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN82@Open@2
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN82@Open@2:

; 56   : 			name = name.Mid(name.ReverseFind('.')+1);

	mov	ecx, DWORD PTR _name$[ebp]
	push	46					; 0000002eH
	push	ecx
	call	_wcsrchr
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN87@Open@2
	or	eax, -1
	jmp	SHORT $LN88@Open@2
$LN87@Open@2:
	sub	eax, DWORD PTR _name$[ebp]
	sar	eax, 1
$LN88@Open@2:
	inc	eax
	push	eax
	lea	edx, DWORD PTR $T332295[ebp]
	push	edx
	lea	ecx, DWORD PTR _name$[ebp]
	call	?Mid@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBE?AV12@H@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Mid
	push	eax
	lea	ecx, DWORD PTR _name$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	call	??4?$CSimpleStringT@_W$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<wchar_t,0>::operator=
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	eax, DWORD PTR $T332295[ebp]
	add	eax, -16				; fffffff0H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN103@Open@2
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN103@Open@2:

; 57   : 		}

	lea	eax, DWORD PTR [esi-16]
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN112@Open@2
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN112@Open@2:

; 58   : 
; 59   : 		try
; 60   : 		{

	mov	BYTE PTR __$EHRec$[ebp+12], 6

; 61   : 			if(Open(FileInputStream(fn), name)) 

	mov	eax, DWORD PTR _name$[ebp]
	push	ecx
	add	eax, -16				; fffffff0H
	mov	DWORD PTR $T332297[ebp], esp
	mov	esi, esp
	push	eax
	call	?CloneData@?$CSimpleStringT@_W$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<wchar_t,0>::CloneData
	add	eax, 16					; 00000010H
	add	esp, 4
	mov	DWORD PTR [esi], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	mov	ecx, DWORD PTR _fn$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T332298[ebp]
	call	??0FileInputStream@ssf@@QAE@PB_W@Z	; ssf::FileInputStream::FileInputStream
	mov	BYTE PTR __$EHRec$[ebp+12], 8
	push	eax
	mov	ecx, edi
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	call	?Open@CRenderer@ssf@@QAE_NAAVInputStream@2@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; ssf::CRenderer::Open
	lea	ecx, DWORD PTR $T332298[ebp]
	mov	bl, al
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	call	??1FileInputStream@ssf@@UAE@XZ		; ssf::FileInputStream::~FileInputStream
	test	bl, bl
	je	SHORT $LN1@Open@2

; 62   : 			{
; 63   : 				m_fn = fn;

	mov	ecx, DWORD PTR tv544[ebp]
	lea	edx, DWORD PTR _fn$[ebp]
	push	edx
	call	??4?$CSimpleStringT@_W$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<wchar_t,0>::operator=

; 64   : 				return true;

	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	eax, DWORD PTR _fn$[ebp]
	add	eax, -16				; fffffff0H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN136@Open@2
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN136@Open@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR _name$[ebp]
	add	eax, -16				; fffffff0H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN145@Open@2
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN145@Open@2:
	mov	al, 1

; 73   : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN1@Open@2:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
$LN17@Open@2:

; 71   : 
; 72   : 		return false;	

	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	eax, DWORD PTR _fn$[ebp]
	add	eax, -16				; fffffff0H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN154@Open@2
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN154@Open@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR _name$[ebp]
	add	eax, -16				; fffffff0H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN163@Open@2
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN163@Open@2:

; 73   : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	xor	al, al
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
__catch$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z$0:

; 65   : 			}
; 66   : 		}
; 67   : 		catch(Exception& e)
; 68   : 		{
; 69   : 			TRACE(_T("%s\n"), e.ToString());
; 70   : 		}

	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, $LN17@Open@2
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z$2:
	lea	ecx, DWORD PTR _name$[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__unwindfunclet$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z$3:
	lea	ecx, DWORD PTR _fn$[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__unwindfunclet$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z$4:
	lea	ecx, DWORD PTR _str$125002[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__unwindfunclet$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z$5:
	lea	ecx, DWORD PTR $T332293[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__unwindfunclet$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z$6:
	lea	ecx, DWORD PTR $T332294[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__unwindfunclet$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z$7:
	lea	ecx, DWORD PTR $T332295[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__unwindfunclet$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z$8:
	mov	ecx, DWORD PTR $T332297[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__unwindfunclet$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z$9:
	lea	ecx, DWORD PTR $T332298[ebp]
	jmp	??1FileInputStream@ssf@@UAE@XZ		; ssf::FileInputStream::~FileInputStream
__ehhandler$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z:
	mov	eax, OFFSET __ehfuncinfo$?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z ENDP ; ssf::CRenderer::Open
;	COMDAT xdata$x
; File c:\program files\microsoft sdks\windows\v6.1\samples\multimedia\directshow\baseclasses\wxutil.h
xdata$x	SEGMENT
__unwindtable$?Reload@CRenderer@ssf@@UAGJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Reload@CRenderer@ssf@@UAGJXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Reload@CRenderer@ssf@@UAGJXZ$1
__ehfuncinfo$?Reload@CRenderer@ssf@@UAGJXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Reload@CRenderer@ssf@@UAGJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File d:\-=svn=-\svplayer\src\subtitles\ssf.cpp
xdata$x	ENDS
;	COMDAT ?Reload@CRenderer@ssf@@UAGJXZ
_TEXT	SEGMENT
$T370320 = -20						; size = 4
$T370321 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_csAutoLock$ = 8					; size = 4
_this$ = 8						; size = 4
?Reload@CRenderer@ssf@@UAGJXZ PROC			; ssf::CRenderer::Reload, COMDAT

; 234  : 	{

	push	-1
	push	__ehhandler$?Reload@CRenderer@ssf@@UAGJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 235  : 		CAutoLock csAutoLock(m_pLock);

	mov	esi, DWORD PTR _this$[esp+28]
	mov	ebp, DWORD PTR [esi-4]
	push	edi
	push	ebp
	mov	DWORD PTR _csAutoLock$[esp+36], ebp
	call	DWORD PTR __imp__EnterCriticalSection@4
	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[esp+44], ebx

; 236  : 
; 237  : 		return !m_fn.IsEmpty() && Open(m_fn, m_name) ? S_OK : E_FAIL;

	mov	eax, DWORD PTR [esi+4]
	cmp	DWORD PTR [eax-12], ebx
	je	SHORT $LN3@Reload
	mov	eax, DWORD PTR [esi+8]
	push	ecx
	sub	eax, 16					; 00000010H
	mov	DWORD PTR $T370320[esp+40], esp
	mov	edi, esp
	push	eax
	call	?CloneData@?$CSimpleStringT@_W$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<wchar_t,0>::CloneData
	add	eax, 16					; 00000010H
	mov	DWORD PTR [edi], eax
	mov	BYTE PTR __$EHRec$[esp+52], 1
	mov	eax, DWORD PTR [esi+4]
	sub	eax, 16					; 00000010H
	mov	DWORD PTR $T370321[esp+44], esp
	mov	edi, esp
	push	eax
	call	?CloneData@?$CSimpleStringT@_W$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<wchar_t,0>::CloneData
	add	eax, 16					; 00000010H
	mov	DWORD PTR [edi], eax
	add	esp, 4
	lea	ecx, DWORD PTR [esi-20]
	mov	BYTE PTR __$EHRec$[esp+52], bl
	call	?Open@CRenderer@ssf@@QAE_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@0@Z ; ssf::CRenderer::Open
	cmp	al, bl
	jne	SHORT $LN4@Reload
$LN3@Reload:
	mov	ebx, -2147467259			; 80004005H
$LN4@Reload:
	push	ebp
	call	DWORD PTR __imp__LeaveCriticalSection@4

; 238  : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+36]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, ebx
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 20					; 00000014H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Reload@CRenderer@ssf@@UAGJXZ$0:
	lea	ecx, DWORD PTR _csAutoLock$[ebp-4]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__unwindfunclet$?Reload@CRenderer@ssf@@UAGJXZ$1:
	mov	ecx, DWORD PTR $T370320[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__ehhandler$?Reload@CRenderer@ssf@@UAGJXZ:
	mov	eax, OFFSET __ehfuncinfo$?Reload@CRenderer@ssf@@UAGJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Reload@CRenderer@ssf@@UAGJXZ ENDP			; ssf::CRenderer::Reload
END
